----Lab 8--Perform SQL queries for Group by with having and Order by

CREATE TABLE SALES_DATA(
	REGION VARCHAR(30),
	PRODUCT VARCHAR(30),
	SALES_AMOUNT INT,
	AYEAR INT
)


INSERT INTO SALES_DATA VALUES
	('NORTH AMERICA','WATCH',1500,2023),
	('EUROPE','MOBILE',1200,2023),
	('ASIA','WATCH',1800,2023),
	('NORTH AMERICA','TV',900,2024),
	('EUROPE','WATCH',2000,2024),
	('ASIA','MOBILE',1000,2024),
	('NORTH AMERICA','MOBILE',1600,2023),
	('EUROPE','TV',1500,2023),
	('ASIA','TV',1100,2024),
	('NORTH AMERICA','WATCH',1700,2024);

---------------------------------Part – A:
--1.Display Total Sales Amount by Region.
	SELECT 
		REGION,
		SUM(SALES_AMOUNT) 
	FROM SALES_DATA 
	GROUP BY REGION;

--2.Display Average Sales Amount by Product
	SELECT 
		PRODUCT,
		AVG(SALES_AMOUNT) 
	FROM SALES_DATA 
	GROUP BY PRODUCT;

--3.Display Maximum Sales Amount by Year
	SELECT 
		AYEAR,
		MAX(SALES_AMOUNT) 
	FROM SALES_DATA 
	GROUP BY AYEAR

--4.Display Minimum Sales Amount by Region and Year
	SELECT 
		REGION,AYEAR,
		MIN(SALES_AMOUNT)
	FROM SALES_DATA
	GROUP BY REGION,AYEAR;

--5.Count of Products Sold by Region
	SELECT 
		REGION,
		COUNT(PRODUCT) 
	FROM SALES_DATA 
	GROUP BY REGION;

--6.Display Sales Amount by Year and Product
	SELECT 
		AYEAR,PRODUCT,
		SUM(SALES_AMOUNT) 
	FROM SALES_DATA 
	GROUP BY AYEAR,PRODUCT;

--7.Display Regions with Total Sales Greater Than 5000
	SELECT 
		REGION,
		SUM(SALES_AMOUNT)
	FROM SALES_DATA
	GROUP BY REGION
	HAVING SUM(SALES_AMOUNT)>5000;
--8.Display Products with Average Sales Less Than 10000
	SELECT 
		PRODUCT,
		AVG(SALES_AMOUNT)
	FROM SALES_DATA
	GROUP BY PRODUCT
	HAVING AVG(SALES_AMOUNT)<10000;
--9.Display Years with Maximum Sales Exceeding 500
	SELECT 
		AYEAR,
		MAX(SALES_AMOUNT)
	FROM SALES_DATA 
	GROUP BY AYEAR
	HAVING MAX(SALES_AMOUNT)>500;
--10.Display Regions with at Least 3 Distinct Products Sold.
	SELECT 
		REGION,
		COUNT(DISTINCT PRODUCT)
	FROM SALES_DATA
	GROUP BY REGION
	HAVING COUNT(DISTINCT PRODUCT)>=3;
--11.Display Years with Minimum Sales Less Than 1000
	SELECT	
		AYEAR,
		MIN(SALES_AMOUNT)
	FROM SALES_DATA
	GROUP BY AYEAR
	HAVING MIN(SALES_AMOUNT)<1000;
--12.Display Total Sales Amount by Region for Year 2023, Sorted by Total Amount
	SELECT 
		REGION,
		SUM(SALES_AMOUNT)
	FROM SALES_DATA
	WHERE AYEAR=2023
	GROUP BY REGION
	ORDER BY SUM(SALES_AMOUNT);
--------------------------------------Part – B:
--1.Display Count of Orders by Year and Region, Sorted by Year and Region
	SELECT 
		AYEAR,REGION,
		COUNT(PRODUCT)
	FROM SALES_DATA
	GROUP BY AYEAR,REGION
	ORDER BY AYEAR,REGION;
--2.Display Regions with Maximum Sales Amount Exceeding 1000 in Any Year, Sorted by Region
	SELECT 
		REGION,AYEAR,
		MAX(SALES_AMOUNT)
	FROM SALES_DATA
	GROUP BY REGION,AYEAR
	HAVING AYEAR>1000
	ORDER BY REGION;
--3.Display Years with Total Sales Amount Less Than 1000, Sorted by Year Descending
	SELECT 
		AYEAR,
		SUM(SALES_AMOUNT)
	FROM SALES_DATA
	GROUP BY AYEAR
	HAVING SUM(SALES_AMOUNT)<1000
	ORDER BY AYEAR DESC;
--4.Display Top 3 Regions by Total Sales Amount in Year 2024
	SELECT 
		TOP 3 REGION,
		SUM(SALES_AMOUNT)
	FROM SALES_DATA
	WHERE AYEAR = 2024
	GROUP BY REGION;


--------------------------------------Part – C:
--1.Display Products with Average Sales Amount Between 1000 and 2000, Ordered by Product Name
	SELECT
		PRODUCT,
		AVG(SALES_AMOUNT)
	FROM SALES_DATA
	GROUP BY PRODUCT
	HAVING AVG(SALES_AMOUNT) BETWEEN 1000 AND 2000
	ORDER BY PRODUCT
--2.Display Years with More Than 5 Orders from Each Region
	SELECT 
		AYEAR,REGION,
		COUNT(PRODUCT)
	FROM SALES_DATA
	GROUP BY AYEAR,REGION
	HAVING COUNT(PRODUCT)>5
--3.Display Regions with Average Sales Amount Above 1500 in Year 2023 sort by amount in descending.
	SELECT 
		REGION,
		AVG(SALES_AMOUNT)
	FROM SALES_DATA
	WHERE AYEAR = 2023
	GROUP BY REGION
	HAVING AVG(SALES_AMOUNT)>1500
	ORDER BY AVG(SALES_AMOUNT) DESC;
--4.Find out region wise duplicate product.
	SELECT 
		REGION,PRODUCT,
		COUNT(PRODUCT)
	FROM SALES_DATA
	GROUP BY REGION,PRODUCT
	HAVING COUNT(PRODUCT)>=2;
--5.Find out region wise highest sales amount.
	SELECT 
		REGION,
		MAX(SALES_AMOUNT)
	FROM SALES_DATA
	GROUP BY REGION